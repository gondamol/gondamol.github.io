---
title: "TidyTuesday: [WEEK] - [DATASET NAME]"
description: |
  Analysis and visualization of the [YEAR] [DATASET NAME] dataset from TidyTuesday.
author: "Nichodemus Amollo"
date: "`r format(Sys.Date(), '%B %d, %Y')`"
format:
  html:
    toc: true
    toc-depth: 2
    code-fold: true
    code-tools: true
    code-copy: true
    theme: 
      light: [cosmo, ../../custom.scss]
      dark: [darkly, ../../custom.scss]
    css: ../../styles.scss
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  eval = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.width = 12,
  fig.height = 8,
  fig.align = "center",
  out.width = "100%",
  dpi = 300
)
```

## Load Required Packages

```{r load-packages}
library(tidyverse)    # Data manipulation and visualization
library(lubridate)    # Date handling
library(here)         # File path management
library(showtext)     # Custom fonts
library(ggtext)       # Enhanced text support for ggplot2
library(patchwork)    # Combine plots

# Set a custom theme
custom_theme <- theme_minimal(base_family = "sans") +
  theme(
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray50"),
    plot.caption = element_text(color = "gray50"),
    legend.position = "bottom",
    panel.grid.minor = element_blank()
  )

theme_set(custom_theme)
```

## Data Import

```{r load-data}
# Method 1: Using tidytuesdayR package (Recommended)
# library(tidytuesdayR)
# tuesdata <- tt_load('YYYY-MM-DD')
# df <- tuesdata$dataset_name

# Method 2: Direct URL
# df <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/YYYY/YYYY-MM-DD/dataset.csv')

# Method 3: Local file (if you downloaded it)
# df <- readr::read_csv('data/YYYY-MM-DD/dataset.csv')

# For demonstration, using a sample dataset
set.seed(123)
df <- data.frame(
  date = seq.Date(from = as.Date("2024-01-01"), by = "day", length.out = 100),
  value = cumsum(rnorm(100))
)

# Quick exploration
glimpse(df)
summary(df)
```

## Data Wrangling

```{r data-wrangling}
# Clean and prepare your data here
# Example:
# df_clean <- df %>%
#   filter(!is.na(column_name)) %>%
#   mutate(new_column = fct_reorder(column, value)) %>%
#   group_by(group) %>%
#   summarize(mean_value = mean(value, na.rm = TRUE))
```

## Data Visualization

```{r visualization}
# Create your visualization(s)
ggplot(df, aes(x = date, y = value)) +
  geom_line(color = "steelblue", size = 1) +
  geom_point(color = "steelblue4", size = 2) +
  labs(
    title = "Sample Time Series Plot",
    subtitle = "Demonstration of TidyTuesday visualization",
    x = "Date",
    y = "Value",
    caption = "Source: TidyTuesday | Visualization: Nichodemus Amollo"
  ) +
  scale_x_date(date_labels = "%b %Y") +
  theme(
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray50")
  )
```

## Analysis

[Provide your analysis and insights here. Explain what the data shows, any interesting patterns you've found, and what conclusions can be drawn.]

## Key Findings

- **Finding 1**: [Brief description of key finding]
- **Finding 2**: [Brief description of key finding]
- **Finding 3**: [Brief description of key finding]

## Next Steps

[Optional: Describe any additional analyses you'd like to perform or improvements to the visualization.]

## References

- [TidyTuesday GitHub](https://github.com/rfordatascience/tidytuesday)
- [Data Source](#)  # Replace with actual data source
- [R for Data Science](https://r4ds.had.co.nz/)

## Session Info

```{r session-info}
sessioninfo::session_info()
```
